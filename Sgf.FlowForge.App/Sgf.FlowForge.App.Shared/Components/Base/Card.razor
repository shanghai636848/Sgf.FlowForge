@* Components/Base/Card.razor *@

<div class="@GetCardClasses()" @attributes="AdditionalAttributes">
	@if (!string.IsNullOrEmpty(Title) || HeaderContent != null || HeaderActions != null)
	{
		<div class="@GetHeaderClasses()">
			<div class="flex items-center justify-between">
				<div class="flex items-center gap-2">
					@if (!string.IsNullOrEmpty(Icon))
					{
						<i class="@Icon text-[var(--color-primary-500)]"></i>
					}
					@if (!string.IsNullOrEmpty(Title))
					{
						<h3 class="text-xs font-semibold text-[var(--color-text-primary)]">@Title</h3>
					}
					@if (HeaderContent != null)
					{
						@HeaderContent
					}
				</div>
				@if (HeaderActions != null)
				{
					<div class="flex items-center gap-1.5">
						@HeaderActions
					</div>
				}
			</div>
		</div>
	}

	@if (BodyContent != null)
	{
		<div class="@GetBodyClasses()">
			@BodyContent
		</div>
	}

	@if (FooterContent != null)
	{
		<div class="@GetFooterClasses()">
			@FooterContent
		</div>
	}
</div>

@code {
	[Parameter] public string? Title { get; set; }
	[Parameter] public string? Icon { get; set; }
	[Parameter] public RenderFragment? HeaderContent { get; set; }
	[Parameter] public RenderFragment? HeaderActions { get; set; }
	[Parameter] public RenderFragment? BodyContent { get; set; }
	[Parameter] public RenderFragment? FooterContent { get; set; }
	[Parameter] public bool Bordered { get; set; } = true;
	[Parameter] public bool Shadow { get; set; } = true;
	[Parameter] public bool Hoverable { get; set; }
	[Parameter] public string? CustomClass { get; set; }
	[Parameter(CaptureUnmatchedValues = true)]
	public Dictionary<string, object>? AdditionalAttributes { get; set; }

	private string GetCardClasses()
	{

		var classes = new List<string>
		{
			"rounded-lg bg-[var(--color-bg-base)]",
			"transition-all duration-200"
		};

		if (Bordered)
		{
			classes.Add("border border-[var(--color-border-primary)]");
		}

		if (Shadow)
		{
			classes.Add("shadow-sm");
		}

		if (Hoverable)
		{
			classes.Add("hover:shadow-md hover:-translate-y-0.5 cursor-pointer");
		}

		if (!string.IsNullOrEmpty(CustomClass))
		{
			classes.Add(CustomClass);
		}

		return string.Join(" ", classes);
	}

	private string GetHeaderClasses()
	{
		return "px-3 py-2.5 border-b border-[var(--color-border-secondary)]";
	}

	private string GetBodyClasses()
	{
		return "p-3";
	}

	private string GetFooterClasses()
	{
		return "px-3 py-2.5 border-t border-[var(--color-border-secondary)] bg-[var(--color-bg-secondary)]";
	}
}
