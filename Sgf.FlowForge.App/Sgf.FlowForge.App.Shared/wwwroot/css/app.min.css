/*! tailwindcss v4.1.16 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans SC", "Microsoft YaHei", sans-serif;
    --font-mono: "Cascadia Code", "Fira Code", "JetBrains Mono", "SF Mono", Monaco, Consolas, monospace;
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-wider: 0.05em;
    --leading-relaxed: 1.625;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --spacing-0: 0;
    --spacing-0\.5: 0.125rem;
    --spacing-1: 0.25rem;
    --spacing-1\.5: 0.375rem;
    --spacing-2: 0.5rem;
    --spacing-3: 0.75rem;
    --spacing-4: 1rem;
    --spacing-5: 1.25rem;
    --spacing-6: 1.5rem;
    --spacing-8: 2rem;
    --spacing-10: 2.5rem;
    --spacing-12: 3rem;
    --radius-full: 9999px;
    --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
    --transition-base: 200ms cubic-bezier(0.4, 0, 0.2, 1);
    --z-dropdown: 10;
    --z-overlay: 30;
    --z-modal: 40;
    --z-toast: 50;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: var(--spacing-0);
  }
  .inset-y-0 {
    inset-block: var(--spacing-0);
  }
  .top-0 {
    top: var(--spacing-0);
  }
  .top-1 {
    top: var(--spacing-1);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-4 {
    top: var(--spacing-4);
  }
  .right-0 {
    right: var(--spacing-0);
  }
  .right-1 {
    right: var(--spacing-1);
  }
  .right-2 {
    right: var(--spacing-2);
  }
  .right-4 {
    right: var(--spacing-4);
  }
  .bottom-0 {
    bottom: var(--spacing-0);
  }
  .bottom-2 {
    bottom: var(--spacing-2);
  }
  .bottom-4 {
    bottom: var(--spacing-4);
  }
  .left-0 {
    left: var(--spacing-0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-2 {
    left: var(--spacing-2);
  }
  .left-4 {
    left: var(--spacing-4);
  }
  .z-10 {
    z-index: 10;
  }
  .z-30 {
    z-index: 30;
  }
  .z-40 {
    z-index: 40;
  }
  .z-\[calc\(var\(--z-modal\)\+1\)\] {
    z-index: calc(var(--z-modal) + 1);
  }
  .z-\[var\(--z-dropdown\)\] {
    z-index: var(--z-dropdown);
  }
  .z-\[var\(--z-modal\)\] {
    z-index: var(--z-modal);
  }
  .z-\[var\(--z-overlay\)\] {
    z-index: var(--z-overlay);
  }
  .z-\[var\(--z-toast\)\] {
    z-index: var(--z-toast);
  }
  .container {
    width: 100%;
    @media (width >= 30rem) {
      max-width: 30rem;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: var(--spacing-2);
  }
  .mt-0\.5 {
    margin-top: var(--spacing-0\.5);
  }
  .mt-1 {
    margin-top: var(--spacing-1);
  }
  .mt-1\.5 {
    margin-top: var(--spacing-1\.5);
  }
  .mt-2 {
    margin-top: var(--spacing-2);
  }
  .mr-1 {
    margin-right: var(--spacing-1);
  }
  .mr-1\.5 {
    margin-right: var(--spacing-1\.5);
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-0\.5 {
    margin-bottom: var(--spacing-0\.5);
  }
  .mb-1 {
    margin-bottom: var(--spacing-1);
  }
  .mb-1\.5 {
    margin-bottom: var(--spacing-1\.5);
  }
  .mb-4 {
    margin-bottom: var(--spacing-4);
  }
  .ml-1\.5 {
    margin-left: var(--spacing-1\.5);
  }
  .ml-2 {
    margin-left: var(--spacing-2);
  }
  .ml-6 {
    margin-left: var(--spacing-6);
  }
  .ml-auto {
    margin-left: auto;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-1\.5 {
    height: var(--spacing-1\.5);
  }
  .h-2 {
    height: var(--spacing-2);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: var(--spacing-3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-4 {
    height: var(--spacing-4);
  }
  .h-5 {
    height: var(--spacing-5);
  }
  .h-6 {
    height: var(--spacing-6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: var(--spacing-8);
  }
  .h-10 {
    height: var(--spacing-10);
  }
  .h-12 {
    height: var(--spacing-12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-\[90vh\] {
    max-height: 90vh;
  }
  .max-h-full {
    max-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1 {
    width: var(--spacing-1);
  }
  .w-1\.5 {
    width: var(--spacing-1\.5);
  }
  .w-2 {
    width: var(--spacing-2);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: var(--spacing-3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-4 {
    width: var(--spacing-4);
  }
  .w-5 {
    width: var(--spacing-5);
  }
  .w-6 {
    width: var(--spacing-6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: var(--spacing-8);
  }
  .w-10 {
    width: var(--spacing-10);
  }
  .w-12 {
    width: var(--spacing-12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-72 {
    width: calc(var(--spacing) * 72);
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-\[22rem\] {
    max-width: 22rem;
  }
  .max-w-\[80vw\] {
    max-width: 80vw;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .min-w-0 {
    min-width: var(--spacing-0);
  }
  .min-w-\[18rem\] {
    min-width: 18rem;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0\.5 {
    --tw-translate-x: var(--spacing-0\.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[1\.125rem\] {
    --tw-translate-x: 1.125rem;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[1\.375rem\] {
    --tw-translate-x: 1.375rem;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[1\.625rem\] {
    --tw-translate-x: 1.625rem;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-2 {
    --tw-translate-y: calc(var(--spacing-2) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-0 {
    --tw-translate-y: var(--spacing-0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-\[bar_1s_ease-in-out_infinite\] {
    animation: bar 1s ease-in-out infinite;
  }
  .animate-\[progress_1s_linear_infinite\] {
    animation: progress 1s linear infinite;
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize-none {
    resize: none;
  }
  .resize-y {
    resize: vertical;
  }
  .appearance-none {
    appearance: none;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-0\.5 {
    gap: var(--spacing-0\.5);
  }
  .gap-1 {
    gap: var(--spacing-1);
  }
  .gap-1\.5 {
    gap: var(--spacing-1\.5);
  }
  .gap-2 {
    gap: var(--spacing-2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: var(--spacing-3);
  }
  .gap-4 {
    gap: var(--spacing-4);
  }
  .space-y-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(var(--spacing-0\.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(var(--spacing-0\.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(var(--spacing-1) * var(--tw-space-y-reverse));
      margin-block-end: calc(var(--spacing-1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(var(--spacing-3) * var(--tw-space-y-reverse));
      margin-block-end: calc(var(--spacing-3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: var(--radius-full);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-b-lg {
    border-bottom-right-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-\[3px\] {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-\[var\(--color-bg-base\)\] {
    border-color: var(--color-bg-base);
  }
  .border-\[var\(--color-border-primary\)\] {
    border-color: var(--color-border-primary);
  }
  .border-\[var\(--color-border-secondary\)\] {
    border-color: var(--color-border-secondary);
  }
  .border-\[var\(--color-error-200\)\] {
    border-color: var(--color-error-200);
  }
  .border-\[var\(--color-error-500\)\] {
    border-color: var(--color-error-500);
  }
  .border-\[var\(--color-gray-200\)\] {
    border-color: var(--color-gray-200);
  }
  .border-\[var\(--color-info-200\)\] {
    border-color: var(--color-info-200);
  }
  .border-\[var\(--color-info-500\)\] {
    border-color: var(--color-info-500);
  }
  .border-\[var\(--color-primary-200\)\] {
    border-color: var(--color-primary-200);
  }
  .border-\[var\(--color-primary-500\)\] {
    border-color: var(--color-primary-500);
  }
  .border-\[var\(--color-secondary-200\)\] {
    border-color: var(--color-secondary-200);
  }
  .border-\[var\(--color-success-200\)\] {
    border-color: var(--color-success-200);
  }
  .border-\[var\(--color-success-500\)\] {
    border-color: var(--color-success-500);
  }
  .border-\[var\(--color-warning-200\)\] {
    border-color: var(--color-warning-200);
  }
  .border-\[var\(--color-warning-500\)\] {
    border-color: var(--color-warning-500);
  }
  .border-current {
    border-color: currentcolor;
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-t-\[var\(--color-primary-500\)\] {
    border-top-color: var(--color-primary-500);
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .bg-\[var\(--color-bg-base\)\] {
    background-color: var(--color-bg-base);
  }
  .bg-\[var\(--color-bg-base\)\]\/95 {
    background-color: var(--color-bg-base);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-bg-base) 95%, transparent);
    }
  }
  .bg-\[var\(--color-bg-secondary\)\] {
    background-color: var(--color-bg-secondary);
  }
  .bg-\[var\(--color-error-50\)\] {
    background-color: var(--color-error-50);
  }
  .bg-\[var\(--color-error-50\)\]\/95 {
    background-color: var(--color-error-50);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-error-50) 95%, transparent);
    }
  }
  .bg-\[var\(--color-error-500\)\] {
    background-color: var(--color-error-500);
  }
  .bg-\[var\(--color-gray-100\)\] {
    background-color: var(--color-gray-100);
  }
  .bg-\[var\(--color-gray-200\)\] {
    background-color: var(--color-gray-200);
  }
  .bg-\[var\(--color-gray-300\)\] {
    background-color: var(--color-gray-300);
  }
  .bg-\[var\(--color-gray-400\)\] {
    background-color: var(--color-gray-400);
  }
  .bg-\[var\(--color-info-50\)\] {
    background-color: var(--color-info-50);
  }
  .bg-\[var\(--color-info-50\)\]\/95 {
    background-color: var(--color-info-50);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-info-50) 95%, transparent);
    }
  }
  .bg-\[var\(--color-info-500\)\] {
    background-color: var(--color-info-500);
  }
  .bg-\[var\(--color-overlay\)\] {
    background-color: var(--color-overlay);
  }
  .bg-\[var\(--color-primary-50\)\] {
    background-color: var(--color-primary-50);
  }
  .bg-\[var\(--color-primary-100\)\] {
    background-color: var(--color-primary-100);
  }
  .bg-\[var\(--color-primary-500\)\] {
    background-color: var(--color-primary-500);
  }
  .bg-\[var\(--color-secondary-100\)\] {
    background-color: var(--color-secondary-100);
  }
  .bg-\[var\(--color-success-50\)\] {
    background-color: var(--color-success-50);
  }
  .bg-\[var\(--color-success-50\)\]\/95 {
    background-color: var(--color-success-50);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success-50) 95%, transparent);
    }
  }
  .bg-\[var\(--color-success-500\)\] {
    background-color: var(--color-success-500);
  }
  .bg-\[var\(--color-warning-50\)\] {
    background-color: var(--color-warning-50);
  }
  .bg-\[var\(--color-warning-50\)\]\/95 {
    background-color: var(--color-warning-50);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning-50) 95%, transparent);
    }
  }
  .bg-\[var\(--color-warning-500\)\] {
    background-color: var(--color-warning-500);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-\[linear-gradient\(45deg\,rgba\(255\,255\,255\,\.15\)_25\%\,transparent_25\%\,transparent_50\%\,rgba\(255\,255\,255\,\.15\)_50\%\,rgba\(255\,255\,255\,\.15\)_75\%\,transparent_75\%\,transparent\)\] {
    background-image: linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);
  }
  .from-\[var\(--color-accent-500\)\] {
    --tw-gradient-from: var(--color-accent-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-bg-secondary\)\] {
    --tw-gradient-from: var(--color-bg-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-error-500\)\] {
    --tw-gradient-from: var(--color-error-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-primary-100\)\] {
    --tw-gradient-from: var(--color-primary-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-primary-400\)\] {
    --tw-gradient-from: var(--color-primary-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-primary-500\)\] {
    --tw-gradient-from: var(--color-primary-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-secondary-500\)\] {
    --tw-gradient-from: var(--color-secondary-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-success-500\)\] {
    --tw-gradient-from: var(--color-success-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--color-warning-500\)\] {
    --tw-gradient-from: var(--color-warning-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-\[var\(--color-primary-600\)\] {
    --tw-gradient-via: var(--color-primary-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-\[var\(--color-accent-100\)\] {
    --tw-gradient-to: var(--color-accent-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-accent-500\)\] {
    --tw-gradient-to: var(--color-accent-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-accent-600\)\] {
    --tw-gradient-to: var(--color-accent-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-bg-tertiary\)\] {
    --tw-gradient-to: var(--color-bg-tertiary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-error-600\)\] {
    --tw-gradient-to: var(--color-error-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-primary-600\)\] {
    --tw-gradient-to: var(--color-primary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-secondary-600\)\] {
    --tw-gradient-to: var(--color-secondary-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-success-600\)\] {
    --tw-gradient-to: var(--color-success-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--color-warning-600\)\] {
    --tw-gradient-to: var(--color-warning-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-\[length\:1rem_1rem\] {
    background-size: 1rem 1rem;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: var(--spacing-0);
  }
  .p-1 {
    padding: var(--spacing-1);
  }
  .p-3 {
    padding: var(--spacing-3);
  }
  .p-4 {
    padding: var(--spacing-4);
  }
  .px-0 {
    padding-inline: var(--spacing-0);
  }
  .px-1\.5 {
    padding-inline: var(--spacing-1\.5);
  }
  .px-2 {
    padding-inline: var(--spacing-2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: var(--spacing-3);
  }
  .px-4 {
    padding-inline: var(--spacing-4);
  }
  .py-0\.5 {
    padding-block: var(--spacing-0\.5);
  }
  .py-1 {
    padding-block: var(--spacing-1);
  }
  .py-1\.5 {
    padding-block: var(--spacing-1\.5);
  }
  .py-2 {
    padding-block: var(--spacing-2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: var(--spacing-3);
  }
  .py-4 {
    padding-block: var(--spacing-4);
  }
  .py-6 {
    padding-block: var(--spacing-6);
  }
  .pr-7 {
    padding-right: calc(var(--spacing) * 7);
  }
  .pr-8 {
    padding-right: var(--spacing-8);
  }
  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }
  .text-left {
    text-align: left;
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.5rem\] {
    font-size: 0.5rem;
  }
  .text-\[0\.75rem\] {
    font-size: 0.75rem;
  }
  .text-\[0\.625rem\] {
    font-size: 0.625rem;
  }
  .text-\[0\.6875rem\] {
    font-size: 0.6875rem;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .text-\[var\(--color-error-500\)\] {
    color: var(--color-error-500);
  }
  .text-\[var\(--color-error-600\)\] {
    color: var(--color-error-600);
  }
  .text-\[var\(--color-error-700\)\] {
    color: var(--color-error-700);
  }
  .text-\[var\(--color-gray-700\)\] {
    color: var(--color-gray-700);
  }
  .text-\[var\(--color-info-700\)\] {
    color: var(--color-info-700);
  }
  .text-\[var\(--color-primary-500\)\] {
    color: var(--color-primary-500);
  }
  .text-\[var\(--color-primary-600\)\] {
    color: var(--color-primary-600);
  }
  .text-\[var\(--color-primary-700\)\] {
    color: var(--color-primary-700);
  }
  .text-\[var\(--color-secondary-700\)\] {
    color: var(--color-secondary-700);
  }
  .text-\[var\(--color-success-700\)\] {
    color: var(--color-success-700);
  }
  .text-\[var\(--color-text-primary\)\] {
    color: var(--color-text-primary);
  }
  .text-\[var\(--color-text-secondary\)\] {
    color: var(--color-text-secondary);
  }
  .text-\[var\(--color-text-tertiary\)\] {
    color: var(--color-text-tertiary);
  }
  .text-\[var\(--color-warning-700\)\] {
    color: var(--color-warning-700);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/80 {
    color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-lg {
    --tw-shadow: 0 0.625rem 0.9375rem -0.1875rem var(--tw-shadow-color, rgba(0, 0, 0, 0.1)), 0 0.25rem 0.375rem -0.125rem var(--tw-shadow-color, rgba(0, 0, 0, 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 0.25rem 0.375rem -0.0625rem var(--tw-shadow-color, rgba(0, 0, 0, 0.1)), 0 0.125rem 0.25rem -0.0625rem var(--tw-shadow-color, rgba(0, 0, 0, 0.06));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 0.0625rem 0.125rem var(--tw-shadow-color, rgba(0, 0, 0, 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 1.25rem 1.5625rem -0.1875rem var(--tw-shadow-color, rgba(0, 0, 0, 0.1)), 0 0.625rem 0.625rem -0.3125rem var(--tw-shadow-color, rgba(0, 0, 0, 0.04));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-hover\:bg-white\/30 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
      }
    }
  }
  .peer-focus\:ring-2 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .peer-focus\:ring-\[var\(--color-primary-200\)\] {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-color: var(--color-primary-200);
    }
  }
  .peer-focus\:ring-offset-1 {
    &:is(:where(.peer):focus ~ *) {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .placeholder\:text-\[var\(--color-text-tertiary\)\] {
    &::placeholder {
      color: var(--color-text-tertiary);
    }
  }
  .checked\:border-\[var\(--color-primary-500\)\] {
    &:checked {
      border-color: var(--color-primary-500);
    }
  }
  .checked\:bg-\[var\(--color-primary-500\)\] {
    &:checked {
      background-color: var(--color-primary-500);
    }
  }
  .checked\:shadow-\[inset_0_0_0_3px_var\(--color-bg-base\)\] {
    &:checked {
      --tw-shadow: inset 0 0 0 3px var(--tw-shadow-color, var(--color-bg-base));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .hover\:-translate-y-0\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing-0\.5) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:border-\[var\(--color-border-primary\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-border-primary);
      }
    }
  }
  .hover\:border-\[var\(--color-primary-300\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary-300);
      }
    }
  }
  .hover\:border-\[var\(--color-primary-400\)\] {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary-400);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-base\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-base);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-base\)\]\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-base);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-bg-base) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-secondary\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-secondary);
      }
    }
  }
  .hover\:bg-\[var\(--color-bg-tertiary\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-bg-tertiary);
      }
    }
  }
  .hover\:bg-\[var\(--color-error-50\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-error-50);
      }
    }
  }
  .hover\:bg-\[var\(--color-error-600\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-error-600);
      }
    }
  }
  .hover\:bg-\[var\(--color-gray-200\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-\[var\(--color-gray-400\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400);
      }
    }
  }
  .hover\:bg-\[var\(--color-success-600\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success-600);
      }
    }
  }
  .hover\:bg-\[var\(--color-warning-600\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning-600);
      }
    }
  }
  .hover\:bg-white\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:from-\[var\(--color-accent-600\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-accent-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-\[var\(--color-primary-600\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-primary-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-\[var\(--color-secondary-600\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-secondary-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-\[var\(--color-accent-700\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-accent-700);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-\[var\(--color-primary-700\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-primary-700);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-\[var\(--color-secondary-700\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: var(--color-secondary-700);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:text-\[var\(--color-primary-500\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-500);
      }
    }
  }
  .hover\:text-\[var\(--color-text-primary\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--color-text-primary);
      }
    }
  }
  .hover\:text-\[var\(--color-text-secondary\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--color-text-secondary);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 0.25rem 0.375rem -0.0625rem var(--tw-shadow-color, rgba(0, 0, 0, 0.1)), 0 0.125rem 0.25rem -0.0625rem var(--tw-shadow-color, rgba(0, 0, 0, 0.06));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .focus\:border-\[var\(--color-error-500\)\] {
    &:focus {
      border-color: var(--color-error-500);
    }
  }
  .focus\:border-\[var\(--color-primary-500\)\] {
    &:focus {
      border-color: var(--color-primary-500);
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-1 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-\[var\(--color-accent-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-accent-500);
    }
  }
  .focus\:ring-\[var\(--color-error-100\)\] {
    &:focus {
      --tw-ring-color: var(--color-error-100);
    }
  }
  .focus\:ring-\[var\(--color-error-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-error-500);
    }
  }
  .focus\:ring-\[var\(--color-primary-100\)\] {
    &:focus {
      --tw-ring-color: var(--color-primary-100);
    }
  }
  .focus\:ring-\[var\(--color-primary-200\)\] {
    &:focus {
      --tw-ring-color: var(--color-primary-200);
    }
  }
  .focus\:ring-\[var\(--color-primary-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-primary-500);
    }
  }
  .focus\:ring-\[var\(--color-secondary-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-secondary-500);
    }
  }
  .focus\:ring-\[var\(--color-success-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-success-500);
    }
  }
  .focus\:ring-\[var\(--color-warning-500\)\] {
    &:focus {
      --tw-ring-color: var(--color-warning-500);
    }
  }
  .focus\:ring-offset-1 {
    &:focus {
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:scale-95 {
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:inline {
    @media (width >= 40rem) {
      display: inline;
    }
  }
  .md\:sticky {
    @media (width >= 48rem) {
      position: sticky;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:inline {
    @media (width >= 48rem) {
      display: inline;
    }
  }
  .md\:translate-x-0 {
    @media (width >= 48rem) {
      --tw-translate-x: var(--spacing-0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
}
@layer theme {
  :root, [data-theme="light"] {
    --color-primary-50: oklch(97% 0.01 240);
    --color-primary-100: oklch(95% 0.03 240);
    --color-primary-200: oklch(90% 0.06 240);
    --color-primary-300: oklch(82% 0.12 240);
    --color-primary-400: oklch(70% 0.18 240);
    --color-primary-500: oklch(58% 0.22 240);
    --color-primary-600: oklch(48% 0.20 240);
    --color-primary-700: oklch(40% 0.16 240);
    --color-primary-800: oklch(32% 0.12 240);
    --color-primary-900: oklch(26% 0.08 240);
    --color-secondary-50: oklch(97% 0.02 300);
    --color-secondary-100: oklch(95% 0.04 300);
    --color-secondary-200: oklch(90% 0.08 300);
    --color-secondary-300: oklch(82% 0.14 300);
    --color-secondary-400: oklch(70% 0.20 300);
    --color-secondary-500: oklch(58% 0.24 300);
    --color-secondary-600: oklch(48% 0.22 300);
    --color-secondary-700: oklch(40% 0.18 300);
    --color-secondary-800: oklch(32% 0.14 300);
    --color-secondary-900: oklch(26% 0.10 300);
    --color-accent-50: oklch(97% 0.02 320);
    --color-accent-100: oklch(95% 0.05 320);
    --color-accent-200: oklch(90% 0.10 320);
    --color-accent-300: oklch(82% 0.16 320);
    --color-accent-400: oklch(70% 0.24 320);
    --color-accent-500: oklch(58% 0.28 320);
    --color-accent-600: oklch(48% 0.26 320);
    --color-accent-700: oklch(40% 0.22 320);
    --color-accent-800: oklch(32% 0.18 320);
    --color-accent-900: oklch(26% 0.14 320);
    --color-gray-50: oklch(98% 0.005 220);
    --color-gray-100: oklch(96% 0.01 220);
    --color-gray-200: oklch(92% 0.015 220);
    --color-gray-300: oklch(85% 0.02 220);
    --color-gray-400: oklch(70% 0.025 220);
    --color-gray-500: oklch(55% 0.03 220);
    --color-gray-600: oklch(45% 0.025 220);
    --color-gray-700: oklch(35% 0.02 220);
    --color-gray-800: oklch(25% 0.015 220);
    --color-gray-900: oklch(18% 0.01 220);
    --color-success-50: oklch(97% 0.03 145);
    --color-success-500: oklch(65% 0.20 145);
    --color-success-700: oklch(45% 0.16 145);
    --color-warning-50: oklch(97% 0.04 75);
    --color-warning-500: oklch(75% 0.18 75);
    --color-warning-700: oklch(55% 0.14 75);
    --color-error-50: oklch(97% 0.03 15);
    --color-error-500: oklch(62% 0.24 15);
    --color-error-700: oklch(45% 0.20 15);
    --color-info-50: oklch(97% 0.02 210);
    --color-info-500: oklch(62% 0.18 210);
    --color-info-700: oklch(45% 0.15 210);
    --color-bg-base: oklch(100% 0 0);
    --color-bg-secondary: oklch(98% 0.005 220);
    --color-bg-tertiary: oklch(96% 0.01 220);
    --color-text-primary: oklch(20% 0.01 220);
    --color-text-secondary: oklch(45% 0.02 220);
    --color-text-tertiary: oklch(60% 0.02 220);
    --color-text-disabled: oklch(70% 0.01 220);
    --color-border-primary: oklch(85% 0.015 220);
    --color-border-secondary: oklch(92% 0.01 220);
    --color-overlay: oklch(0% 0 0 / 0.5);
  }
}
@layer theme {
  [data-theme="dark"] {
    --color-primary-50: oklch(26% 0.08 240);
    --color-primary-100: oklch(32% 0.12 240);
    --color-primary-200: oklch(40% 0.16 240);
    --color-primary-300: oklch(48% 0.20 240);
    --color-primary-400: oklch(58% 0.22 240);
    --color-primary-500: oklch(68% 0.20 240);
    --color-primary-600: oklch(76% 0.16 240);
    --color-primary-700: oklch(82% 0.12 240);
    --color-primary-800: oklch(88% 0.08 240);
    --color-primary-900: oklch(93% 0.04 240);
    --color-secondary-50: oklch(26% 0.10 300);
    --color-secondary-100: oklch(32% 0.14 300);
    --color-secondary-200: oklch(40% 0.18 300);
    --color-secondary-300: oklch(48% 0.22 300);
    --color-secondary-400: oklch(58% 0.24 300);
    --color-secondary-500: oklch(68% 0.22 300);
    --color-secondary-600: oklch(76% 0.18 300);
    --color-secondary-700: oklch(82% 0.14 300);
    --color-secondary-800: oklch(88% 0.10 300);
    --color-secondary-900: oklch(93% 0.06 300);
    --color-accent-50: oklch(26% 0.14 320);
    --color-accent-100: oklch(32% 0.18 320);
    --color-accent-200: oklch(40% 0.22 320);
    --color-accent-300: oklch(48% 0.26 320);
    --color-accent-400: oklch(58% 0.28 320);
    --color-accent-500: oklch(68% 0.26 320);
    --color-accent-600: oklch(76% 0.22 320);
    --color-accent-700: oklch(82% 0.18 320);
    --color-accent-800: oklch(88% 0.14 320);
    --color-accent-900: oklch(93% 0.10 320);
    --color-gray-50: oklch(18% 0.01 220);
    --color-gray-100: oklch(22% 0.012 220);
    --color-gray-200: oklch(28% 0.015 220);
    --color-gray-300: oklch(35% 0.02 220);
    --color-gray-400: oklch(45% 0.025 220);
    --color-gray-500: oklch(55% 0.03 220);
    --color-gray-600: oklch(65% 0.025 220);
    --color-gray-700: oklch(75% 0.02 220);
    --color-gray-800: oklch(85% 0.015 220);
    --color-gray-900: oklch(92% 0.01 220);
    --color-success-50: oklch(25% 0.08 145);
    --color-success-500: oklch(65% 0.20 145);
    --color-success-700: oklch(80% 0.16 145);
    --color-warning-50: oklch(30% 0.10 75);
    --color-warning-500: oklch(75% 0.18 75);
    --color-warning-700: oklch(88% 0.14 75);
    --color-error-50: oklch(25% 0.12 15);
    --color-error-500: oklch(62% 0.24 15);
    --color-error-700: oklch(78% 0.20 15);
    --color-info-50: oklch(25% 0.10 210);
    --color-info-500: oklch(62% 0.18 210);
    --color-info-700: oklch(78% 0.15 210);
    --color-bg-base: oklch(15% 0.01 220);
    --color-bg-secondary: oklch(18% 0.012 220);
    --color-bg-tertiary: oklch(22% 0.015 220);
    --color-text-primary: oklch(95% 0.01 220);
    --color-text-secondary: oklch(75% 0.02 220);
    --color-text-tertiary: oklch(60% 0.02 220);
    --color-text-disabled: oklch(45% 0.01 220);
    --color-border-primary: oklch(30% 0.015 220);
    --color-border-secondary: oklch(22% 0.01 220);
    --color-overlay: oklch(0% 0 0 / 0.7);
  }
}
@layer theme {
  [data-theme="violet"] {
    --color-primary-500: oklch(58% 0.24 290);
    --color-primary-600: oklch(48% 0.22 290);
    --color-primary-700: oklch(40% 0.18 290);
    --color-bg-base: oklch(99% 0.01 290);
    --color-bg-secondary: oklch(97% 0.015 290);
  }
}
@layer theme {
  [data-theme="pink"] {
    --color-primary-500: oklch(62% 0.28 340);
    --color-primary-600: oklch(52% 0.26 340);
    --color-primary-700: oklch(42% 0.22 340);
    --color-bg-base: oklch(99% 0.01 340);
    --color-bg-secondary: oklch(97% 0.015 340);
  }
}
@layer base {
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  html {
    font-size: 16px;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }
  body {
    font-family: var(--font-sans);
    font-size: 0.75rem;
    line-height: 1.5;
    color: var(--color-text-primary);
    background-color: var(--color-bg-base);
    transition: background-color var(--transition-base), color var(--transition-base);
  }
  ::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
  }
  ::-webkit-scrollbar-track {
    background: var(--color-bg-secondary);
    border-radius: var(--radius-sm);
  }
  ::-webkit-scrollbar-thumb {
    background: var(--color-gray-400);
    border-radius: var(--radius-sm);
    transition: background var(--transition-fast);
  }
  ::-webkit-scrollbar-thumb:hover {
    background: var(--color-gray-500);
  }
  * {
    scrollbar-width: thin;
    scrollbar-color: var(--color-gray-400) var(--color-bg-secondary);
  }
  ::selection {
    background-color: var(--color-primary-200);
    color: var(--color-primary-900);
  }
  :focus-visible {
    outline: 2px solid var(--color-primary-500);
    outline-offset: 2px;
  }
  :disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}
@layer utilities {
  .text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .text-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .text-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .animate-fade-in {
    animation: fadeIn var(--transition-base);
  }
  .animate-slide-up {
    animation: slideUp var(--transition-base);
  }
  .animate-slide-down {
    animation: slideDown var(--transition-base);
  }
  .animate-scale-in {
    animation: scaleIn var(--transition-fast);
  }
  .glass {
    background: var(--color-bg-base);
    backdrop-filter: blur(10px) saturate(180%);
    -webkit-backdrop-filter: blur(10px) saturate(180%);
    border: 1px solid var(--color-border-secondary);
  }
  .gradient-primary {
    background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-600));
  }
  .gradient-secondary {
    background: linear-gradient(135deg, var(--color-secondary-500), var(--color-secondary-600));
  }
  .gradient-accent {
    background: linear-gradient(135deg, var(--color-accent-500), var(--color-accent-600));
  }
}
@layer animations {
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(0.5rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-0.5rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
}
@layer utilities {
  @media (max-width: 47.9375rem) {
    .hide-mobile {
      display: none !important;
    }
  }
  @media (min-width: 48rem) {
    .hide-desktop {
      display: none !important;
    }
  }
}
@media print {
  body {
    background: white;
    color: black;
  }
  .no-print {
    display: none !important;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
