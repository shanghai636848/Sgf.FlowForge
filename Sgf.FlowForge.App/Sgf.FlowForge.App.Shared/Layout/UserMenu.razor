@using Sgf.FlowForge.App.Shared.Components.Base
@using Sgf.FlowForge.App.Shared.Models
@using Sgf.FlowForge.App.Shared.Services
@* Components/Layout/UserMenu.razor *@
@inject LocalizationService L
@inject NavigationManager Navigation

<div class="relative" @ref="_dropdownRef">
	<button type="button"
			class="flex items-center gap-2 h-8 px-2 rounded-md
                   bg-white/10 hover:bg-white/20
                   transition-all duration-200"
			@onclick="ToggleDropdown">
		<Avatar Size="AvatarSize.ExtraSmall"
				Text="Admin"
				ShowStatus="true"
				StatusOnline="true" />
		<span class="hidden sm:inline text-xs font-medium text-white">Admin</span>
		<i class="fas fa-chevron-down text-[0.625rem] text-white/70"></i>
	</button>

	@if (_isOpen)
	{
		<div class="absolute right-0 mt-2 w-56 rounded-lg shadow-xl border border-[var(--color-border-primary)]
	                    bg-[var(--color-bg-base)] animate-slide-down z-[var(--z-dropdown)]">

			<!-- 用户信息 -->
			<div class="px-3 py-3 border-b border-[var(--color-border-secondary)]">
				<div class="flex items-center gap-2">
					<Avatar Size="AvatarSize.Small" Text="Admin" ShowStatus="true" />
					<div class="flex-1 min-w-0">
						<div class="text-xs font-semibold text-[var(--color-text-primary)] truncate">
							Administrator
						</div>
						<div class="text-[0.625rem] text-[var(--color-text-tertiary)] truncate">
							admin@flowforge.io
						</div>
					</div>
				</div>
			</div>

			<!-- 菜单项 -->
			<div class="py-1">
				<button type="button"
						class="w-full flex items-center gap-2 px-3 py-2 text-xs
	                               text-[var(--color-text-primary)] hover:bg-[var(--color-bg-secondary)]
	                               transition-colors"
						@onclick="@(() => NavigateTo("profile"))">
					<i class="fas fa-user w-4 text-[var(--color-text-tertiary)]"></i>
					<span>@L["user.profile"]</span>
				</button>

				<button type="button"
						class="w-full flex items-center gap-2 px-3 py-2 text-xs
	                               text-[var(--color-text-primary)] hover:bg-[var(--color-bg-secondary)]
	                               transition-colors"
						@onclick="@(() => NavigateTo("settings"))">
					<i class="fas fa-cog w-4 text-[var(--color-text-tertiary)]"></i>
					<span>@L["user.settings"]</span>
				</button>

				<button type="button"
						class="w-full flex items-center gap-2 px-3 py-2 text-xs
	                               text-[var(--color-text-primary)] hover:bg-[var(--color-bg-secondary)]
	                               transition-colors"
						@onclick="@(() => NavigateTo("projects"))">
					<i class="fas fa-folder w-4 text-[var(--color-text-tertiary)]"></i>
					<span>@L["user.projects"]</span>
				</button>
			</div>

			<!-- 分隔线 -->
			<div class="border-t border-[var(--color-border-secondary)]"></div>

			<!-- 退出登录 -->
			<div class="py-1">
				<button type="button"
						class="w-full flex items-center gap-2 px-3 py-2 text-xs
	                               text-[var(--color-error-600)] hover:bg-[var(--color-error-50)]
	                               transition-colors rounded-b-lg"
						@onclick="HandleLogout">
					<i class="fas fa-sign-out-alt w-4"></i>
					<span>@L["user.logout"]</span>
				</button>
			</div>
		</div>
	}
</div>

@code {
	private ElementReference _dropdownRef;
	private bool _isOpen = false;

	private void ToggleDropdown()
	{
		_isOpen = !_isOpen;
	}

	private void NavigateTo(string url)
	{
		_isOpen = false;
		Navigation.NavigateTo(url);
	}

	private void HandleLogout()
	{
		_isOpen = false;
		// 实现登出逻辑
		Navigation.NavigateTo("/login");
	}

	
}