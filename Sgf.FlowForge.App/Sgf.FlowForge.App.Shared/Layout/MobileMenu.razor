@using Sgf.FlowForge.App.Shared.Components.Base
@using Sgf.FlowForge.App.Shared.Models
@using Sgf.FlowForge.App.Shared.Services
@* Components/Layout/MobileMenu.razor *@
@inject NavigationManager Navigation
@inject LocalizationService L
@inject JSRuntime JS

<!-- 遮罩层 -->
@if (IsOpen)
{
    <div class="fixed inset-0 bg-[var(--color-overlay)] backdrop-blur-sm z-[var(--z-modal)]
                lg:hidden animate-fade-in"
         @onclick="Close"></div>

    <!-- 侧滑菜单 -->
    <div class="fixed inset-y-0 left-0 w-72 max-w-[80vw]
                bg-[var(--color-bg-base)] shadow-xl
                z-[calc(var(--z-modal)+1)] lg:hidden
                flex flex-col
                animate-slide-right">
        
        <!-- 菜单头部 -->
        <div class="h-16 px-4 flex items-center justify-between border-b border-[var(--color-border-primary)]">
            <div class="flex items-center gap-2">
                <div class="w-10 h-10 rounded-lg bg-gradient-to-br from-[var(--color-primary-500)] to-[var(--color-accent-500)]
                           flex items-center justify-center">
                    <i class="fas fa-project-diagram text-white text-lg"></i>
                </div>
                <div>
                    <h2 class="text-sm font-bold text-[var(--color-text-primary)]">FlowForge</h2>
                    <p class="text-[0.625rem] text-[var(--color-text-secondary)]">v1.0.0</p>
                </div>
            </div>

            <button type="button"
                    class="w-8 h-8 flex items-center justify-center
                           text-[var(--color-text-tertiary)] hover:text-[var(--color-text-primary)]
                           hover:bg-[var(--color-bg-secondary)] rounded-md
                           transition-all"
                    @onclick="Close">
                <i class="fas fa-times text-sm"></i>
            </button>
        </div>

        <!-- 菜单内容 -->
        <div class="flex-1 overflow-y-auto p-3">
            <NavMenu />
        </div>

        <!-- 菜单底部 -->
        <div class="p-4 border-t border-[var(--color-border-primary)] space-y-3">
            <!-- 主题和语言切换 -->
            <div class="flex items-center justify-between">
                <span class="text-xs font-medium text-[var(--color-text-secondary)]">
                    @L["navigation.preferences"]
                </span>
                <div class="flex items-center gap-2">
                    <ThemeSwitcher />
                    <LanguageSwitcher />
                </div>
            </div>

            <!-- 用户信息 -->
            <div class="flex items-center gap-3 p-3 rounded-lg
                        bg-gradient-to-br from-[var(--color-bg-secondary)] to-[var(--color-bg-tertiary)]
                        border border-[var(--color-border-secondary)]">
                <Avatar Size="AvatarSize.Medium" 
                        Text="用户" 
                        ShowStatus="true" 
                        StatusOnline="true" />
                <div class="flex-1 min-w-0">
                    <p class="text-xs font-semibold text-[var(--color-text-primary)] truncate">
                        演示用户
                    </p>
                    <p class="text-[0.625rem] text-[var(--color-text-tertiary)] truncate">
                        demo@flowforge.io
                    </p>
                </div>
                <button type="button"
                        class="flex-shrink-0 w-7 h-7 flex items-center justify-center
                               text-[var(--color-text-tertiary)] hover:text-[var(--color-text-primary)]
                               hover:bg-[var(--color-bg-base)] rounded
                               transition-all">
                    <i class="fas fa-sign-out-alt text-[0.625rem]"></i>
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }

    private async Task Close()
    {
        IsOpen = false;
        await IsOpenChanged.InvokeAsync(false);
    }

    protected override void OnParametersSet()
    {
        if (IsOpen)
        {
            // 禁止背景滚动
            _ = JS.InvokeVoidAsync("eval", "document.body.style.overflow = 'hidden'");
        }
        else
        {
            // 恢复滚动
            _ = JS.InvokeVoidAsync("eval", "document.body.style.overflow = ''");
        }
    }
}

<style>
    @@keyframes slide-right {
        from {
            transform: translateX(-100%);
        }
        to {
            transform: translateX(0);
        }
    }

    .animate-slide-right {
        animation: slide-right 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
</style>